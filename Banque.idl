#include "idl/CosNotifyChannelAdmin.idl"

module BankSystem
{
    
    enum TransactionType
    {
        DEBIT,
        CREDIT
    };
    
    struct Transaction
    {
        unsigned long id;
        unsigned long bank_id;
        unsigned long account_id;
        unsigned long amount;
        TransactionType type;
    };

    struct Transfer
    {
        unsigned long src_bank_id;
        unsigned long src_account_id;
        unsigned long dest_bank_id;
        unsigned long dest_account_id;
        unsigned long amount;
    };

    struct TransferDate {
        Transfer transfer;
        long long date;
    };
    
    typedef sequence<TransferDate> TransferSequence;


    typedef org::omg::CosNotifyChannelAdmin::EventChannel EventChannel;
    interface Bank_IInterbank
    {
        void set_channel(in EventChannel ec);
    };

    interface Account
    {
        void deposit(in unsigned long amount);
        void withdraw(in unsigned long amount);
        long get_balance();
        void transfer(in unsigned long dst_bank_id,
                      in unsigned long dst_account_id,
                      in unsigned long amount);
    };
    
    interface Bank_ICustomer
    {
        long create_account();
        void close_account(in long account_id);
        Account connect_account(in long account_id);
    };

    interface Interbank
    {
        void register(in long bank_id, in Bank_IInterbank bank_callback);
        void confirm_transaction(
            in unsigned long transaction_id, in boolean success);
        void request_transfer(in Transfer t);
        TransferSequence get_transfer_history();
    };

    interface Bank : Bank_IInterbank, Bank_ICustomer
    {
    };
};
